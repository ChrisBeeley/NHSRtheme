on:
  push:
    branches: [main, master]

name: pkgdown

jobs:
  pkgdown:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          install.packages("pkgdown", type = "binary")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Deploy package
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

      - name: Generate samples
        run: |
          # generate sample of slides

          install.packages("git2r")

          git2r::fetch(name = "origin")
          git2r::checkout(branch = "gh-pages")

          # generate sample of slides

          templates_path <- system.file("rmarkdown", "templates", package = "nhsrtheme")
          templates <- dir(templates_path)

          if (!dir.exists("samples")) {
            dir.create("samples", recursive = TRUE)
          }

          for (t in templates) {
            rmarkdown::render(file.path(templates_path, t, "skeleton", "skeleton.Rmd"),
                              output_file = paste0(t, ".html"),
                              output_dir = "samples")
          }

          git2r::add(path = "samples")
          git2r::commit(message = "renders samples")
          cred <- git2r::cred_token()
          git2r::push(name = "origin", refspec = "gh-pages", credentials = cred, force = TRUE)
        shell: Rscript {0}
